plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

// Try multiple locations for key.properties
def keystoreProperties = new Properties()

def androidKeyFile = file("android/key.properties")
def rootKeyFile = file("../key.properties") // root of repo

// Try android directory first
if (androidKeyFile.exists()) {
    keystoreProperties.load(new FileInputStream(androidKeyFile))
    println "✅ Keystore file loaded successfully from android directory."
    println "✅ Keystore file path: ${keystoreProperties['storeFile']}"
}
// Then try root directory
else if (rootKeyFile.exists()) {
    keystoreProperties.load(new FileInputStream(rootKeyFile))
    println "✅ Keystore file loaded successfully from root directory."
    println "✅ Keystore file path: ${keystoreProperties['storeFile']}"
}
else {
    println "❌ Warning: key.properties file not found in any location."
    println "Searched in: ${androidKeyFile.absolutePath}"
    println "Searched in: ${rootKeyFile.absolutePath}"
}
android {
    namespace = "com.siva.sampleconnect"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        // ✅ Required for desugaring
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    lintOptions {
        checkReleaseBuilds false
    }

    signingConfigs {
        release {
            if (keystoreProperties.containsKey('storeFile') && keystoreProperties['storeFile'] != null) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'].toString())
                storePassword keystoreProperties['storePassword']
            } else {
                println "⚠️ Signing config incomplete: storeFile is missing or null"
            }
        }
    }
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.siva.sampleconnect"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = 5
        versionName = "1.0.4"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    // Import the Firebase BoM
    implementation(platform("com.google.firebase:firebase-bom:33.15.0"))


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation(platform("com.google.firebase:firebase-bom:33.15.0"))
    implementation("org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.6.0")
    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation("com.google.firebase:firebase-analytics")
    implementation 'com.google.firebase:firebase-messaging:24.1.1'
    implementation("com.facebook.android:facebook-login:latest.release")
    implementation("com.google.firebase:firebase-auth")
    implementation('com.android.billingclient:billing:7.1.1')
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}


