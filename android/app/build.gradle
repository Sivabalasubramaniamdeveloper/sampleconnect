plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // id 'com.google.firebase.crashlytics'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

// Try multiple locations for key.properties
def keystoreProperties = new Properties()
def androidKeyFile = rootProject.file("android/local.properties")
def rootKeyFile = rootProject.file("local.properties")

if (androidKeyFile.exists()) {
    keystoreProperties.load(new FileInputStream(androidKeyFile))
    println "✅ Keystore file loaded successfully from android directory."
} else if (rootKeyFile.exists()) {
    keystoreProperties.load(new FileInputStream(rootKeyFile))
    println "✅ Keystore file loaded successfully from root directory."
}

android {
    namespace = "com.siva.sampleconnect"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
        coreLibraryDesugaringEnabled true
    }

    lintOptions {
        checkReleaseBuilds false
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    flavorDimensions "flavor-type"

    productFlavors{
        sit {
            dimension "flavor-type"
            applicationId "com.siva.sampleconnect.sit"
            resValue "string", "app_name", "E-Connect SIT"
//            signingConfig signingConfigs.devrel
        }
        uat {
            dimension "flavor-type"
            applicationId "com.siva.sampleconnect.uat"
            resValue "string", "app_name", "E-Connect UAT"
//            signingConfig signingConfigs.devrel
        }
        prod {
            dimension "flavor-type"
            applicationId "com.siva.sampleconnect"
            resValue "string", "app_name", "E-Connect"
//            signingConfig signingConfigs.devrel
        }

    }
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.siva.sampleconnect"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdk = flutter.targetSdkVersion
        versionCode 8
        versionName "1.0.8"
    }

    signingConfigs {
        release {
            if (keystoreProperties.containsKey('signIn.file') && keystoreProperties['signIn.file'] != null) {
                keyAlias keystoreProperties['signIn.keyAlias']
                keyPassword keystoreProperties['signIn.keyPassword']
                storeFile file(keystoreProperties['signIn.file'].toString())
                storePassword keystoreProperties['signIn.storePassword']
            } else {
                println "⚠️ Signing config incomplete: storeFile is missing or null"
            }
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now,
            // so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            signingConfig = signingConfigs.release
            minifyEnabled false
            shrinkResources false
            ndk {
                debugSymbolLevel = 'FULL'
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // Import the Firebase BoM
    implementation(platform("com.google.firebase:firebase-bom:33.15.0"))
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation(platform("com.google.firebase:firebase-bom:33.15.0"))
    implementation("org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.6.0")
    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation("com.google.firebase:firebase-analytics")
    implementation 'com.google.firebase:firebase-messaging:24.1.1'
    implementation("com.facebook.android:facebook-login:latest.release")
    implementation("com.google.firebase:firebase-auth")
    implementation('com.android.billingclient:billing:7.1.1')
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.5'
    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}
